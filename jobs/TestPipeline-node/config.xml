<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.21">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.2.9"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.2.9">
      <jobProperties/>
      <triggers/>
      <parameters/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>Running the Pipeline in different nodes</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.periodicreincarnation.JobLocalConfiguration plugin="periodic-reincarnation@1.12.1">
      <isLocallyConfigured>false</isLocallyConfigured>
      <isLocallyDeactivated>false</isLocallyDeactivated>
    </org.jenkinsci.plugins.periodicreincarnation.JobLocalConfiguration>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.28">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.53">
    <script>pipeline {
    agent {label &apos;bamboo&apos; }
    stages {

        stage (&apos;Display_File&apos;){
            steps{
            script{
                //sh returnStdout: true, script: &apos;docker-compose -f /lgames/docker-compose-all.yml -p testcomp up -d reference&apos;
                //def pathadd = sh(script: &apos;pwd&apos;, returnStdout: true)
                echo &quot;this is s test in bamboo server&quot;   
                sh &apos;hostname -i&apos;
            }
            }
        }  
        }
    }</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>