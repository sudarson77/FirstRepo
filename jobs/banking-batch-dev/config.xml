<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.cloudbees.plugins.deployer.DeployNowJobProperty plugin="deployer-framework@1.1">
      <oneClickDeploy>false</oneClickDeploy>
      <hosts/>
    </com.cloudbees.plugins.deployer.DeployNowJobProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>10</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>3</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.29.1">
      <projectUrl>https://github.com/nectar-uk/banking-batch/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <org.jenkinsci.plugins.periodicreincarnation.JobLocalConfiguration plugin="periodic-reincarnation@1.12.1">
      <isLocallyConfigured>false</isLocallyConfigured>
      <isLocallyDeactivated>false</isLocallyDeactivated>
    </org.jenkinsci.plugins.periodicreincarnation.JobLocalConfiguration>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.28">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/nectar-uk/banking-batch.git</url>
        <credentialsId>JenkinsGitKey</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/dev</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <browser class="hudson.plugins.git.browser.GithubWeb">
      <url>https://github.com/nectar-uk/banking-batch/</url>
    </browser>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>H/5 * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/sh
cd deploy/python
git clone https://nectar-banking-jenkins:b358f867bb5b2f13de77f06d5677bd34de1e244a@github.com/nectar-uk/banking-database.git
cd banking-database
git pull origin dev
cd ..
var1=&quot;dev&quot;
var2=&quot;org.sonarqube:banking-batch:&quot;
var3=$var2$var1
#echo BRANCH=$var2$ghprbSourceBranch &gt; env.properties
echo BRANCH=${var3} &gt; env.properties
env
docker-compose -f docker-compose-ci.yml -p ci stop
docker-compose -f docker-compose-ci.yml -p ci rm --force
echo &apos;start ndwh-db&apos;
docker-compose -f docker-compose-ci.yml -p ci up -d ndwh-db
echo &apos;deploy ndwh schema&apos;
./banking-database/ndwh-docker/deploy-ndwh-schema-docker.sh -p ci
echo &apos;start molehill-db&apos;
docker-compose -f docker-compose-ci.yml -p ci up -d molehill-db
echo &apos;deploy molehill-schema&apos;
./banking-database/docker/deploy-molehill-schema-docker.sh -p ci
echo &apos;run tests&apos;
docker-compose -f docker-compose-ci.yml -p ci up -d eagleeye 
#docker-compose -f docker-compose-ci.yml -p ci build batch
docker-compose -f docker-compose-ci.yml -p ci up batch 
sed -i &apos;s|&apos;/python&apos;|&apos;/data01/jenkins/jobs/banking-batch-dev/workspace/deploy/python&apos;|g&apos; coverage.xml</command>
    </hudson.tasks.Shell>
    <hudson.plugins.sonar.SonarRunnerBuilder plugin="sonar@2.7.1">
      <project></project>
      <properties>sonar.projectBaseDir=/data01/jenkins/jobs/banking-batch-dev/workspace/deploy/python
sonar.projectVersion=1.0
# Comma-separated paths to directories with sources (required)
sonar.sources=batches,PS_Scripts
sonar.test=tests
# Language
sonar.language=py

sonar.python.xunit.reportPath=nosetests.xml

sonar.python.coverage.reportPath=coverage.xml

# Encoding of the source files
sonar.sourceEncoding=UTF-8
</properties>
      <javaOpts></javaOpts>
      <additionalArguments>-Dsonar.projectKey=&quot;org.sonarqube:banking-batch&quot;
-Dsonar.projectName=&quot;banking-batch&quot;
-Dsonar.branch=&quot;dev&quot;</additionalArguments>
      <jdk>(Inherit From Job)</jdk>
      <task></task>
    </hudson.plugins.sonar.SonarRunnerBuilder>
    <EnvInjectBuilder plugin="envinject@2.1.5">
      <info>
        <propertiesFilePath>deploy/python/env.properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
  </builders>
  <publishers>
    <org.quality.gates.jenkins.plugin.QGPublisher plugin="sonar-quality-gates@1.3.0">
      <jobConfigData>
        <projectKey>org.sonarqube:banking-batch:dev</projectKey>
        <sonarInstanceName>GalSonar</sonarInstanceName>
        <attemptsToRepeat>0</attemptsToRepeat>
        <buildStatus>FAILED</buildStatus>
      </jobConfigData>
      <buildDecision>
        <qualityGatesProvider>
          <qualityGateResponseParser/>
          <sonarHttpRequester class="org.quality.gates.sonar.api61.SonarHttpRequester61">
            <logged>false</logged>
          </sonarHttpRequester>
          <sonarInstanceValidationService/>
        </qualityGatesProvider>
      </buildDecision>
      <jobConfigurationService/>
      <jobExecutionService/>
    </org.quality.gates.jenkins.plugin.QGPublisher>
    <hudson.plugins.cobertura.CoberturaPublisher plugin="cobertura@1.12.1">
      <coberturaReportFile>deploy/python/coverage.xml</coberturaReportFile>
      <onlyStable>false</onlyStable>
      <failUnhealthy>false</failUnhealthy>
      <failUnstable>false</failUnstable>
      <autoUpdateHealth>false</autoUpdateHealth>
      <autoUpdateStability>false</autoUpdateStability>
      <zoomCoverageChart>false</zoomCoverageChart>
      <maxNumberOfBuilds>0</maxNumberOfBuilds>
      <failNoReports>true</failNoReports>
      <lineCoverageTargets>80, 0, 0</lineCoverageTargets>
      <methodCoverageTargets>80, 0, 0</methodCoverageTargets>
      <conditionalCoverageTargets>70, 0, 0</conditionalCoverageTargets>
      <healthyTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>METHOD</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>8000000</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>8000000</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>7000000</int>
          </entry>
        </targets>
      </healthyTarget>
      <unhealthyTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>METHOD</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
        </targets>
      </unhealthyTarget>
      <failingTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>METHOD</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
        </targets>
      </failingTarget>
      <sourceEncoding>ASCII</sourceEncoding>
    </hudson.plugins.cobertura.CoberturaPublisher>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.24">
      <testResults>deploy/python/nosetests.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <allowEmptyResults>false</allowEmptyResults>
    </hudson.tasks.junit.JUnitResultArchiver>
    <jenkins.plugins.slack.SlackNotifier plugin="slack@2.3">
      <baseUrl></baseUrl>
      <teamDomain></teamDomain>
      <authToken></authToken>
      <authTokenCredentialId></authTokenCredentialId>
      <botUser>false</botUser>
      <room></room>
      <startNotification>true</startNotification>
      <notifySuccess>true</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>true</notifyUnstable>
      <notifyRegression>false</notifyRegression>
      <notifyFailure>true</notifyFailure>
      <notifyBackToNormal>false</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <includeFailedTests>false</includeFailedTests>
      <commitInfoChoice>NONE</commitInfoChoice>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.34">
      <deleteDirs>true</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete>sudo rm -rf %s</externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
  </buildWrappers>
</project>